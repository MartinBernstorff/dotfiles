;; !  | means mandatory
;; #  | means optional
;; C  | left_command
;; T  | left_control
;; O  | left_option
;; S  | left_shift
;; F  | fn
;; Q  | right_command
;; W  | right_control
;; E  | right_option
;; R  | right_shift
;; P  | caps_lock
;; !! | mandatory command + control + optional + shift (hyper)
;; ## | optional any

;; examples

;; !CTSequal_sign  | mandatory command control shift =
;;                 | which is command control +
;; !O#Sright_arrow | mandatory option optional any right_arrow

;; karabiner definition of mandatory and optional
;; https://karabiner-elements.pqrs.org/docs/json/complex-modifications-manipulator-definition/from/modifiers/

;; rule [<from> <to>]
;; if simplified modifier is used in <to>, optional(#) definition will be
;; ignored.

;; FROM modifiers
;; to understand better how modifiers work in karabiner
;; karabiner definition of mandatory and optional
;; https://karabiner-elements.pqrs.org/docs/json/complex-modifications-manipulator-definition/from/modifiers/
;;    | no modifier
;;                  input key maps to output key exactly
;;                  adding any modifier will cancel the event

;; !  | mandatory
;;                  specified modifier is removed in output (to event)
;;                  specified modifiers must be present for event to occur
;;                  adding any other modifier will cancel the event

;; #  | optional (single)
;;                  specified modifier is kept in output (to event)
;;                  one (or none) of the specified modifiers must be present
;;                  adding any other modifier will cancel the event


;;                  specified modifier is removed in output (to event)
;;                  specified modifiers *must* be present for event to occur
;;                  adding any other modifier will add to output event
;;                  (what you typically expect, additional modifiers tacked on)
;;
;; need to prefix C T O S F with ! or #
;;
{:default true

 :layers {:caps-mode {:key :caps_lock :alone {:key :vk_none}}
          :left_shift_mode {:key :left_shift}
          }

  :devices {:vortex [{:vendor_id 1241 :product_id 402}]}

  :main [
         {:des "caps_lock + hjkl to arrow" 
          :rules [:caps-mode 
                  [:##i :##return_or_enter] 
                  [:##o :##delete_or_backspace]
                  [:##h :##left_arrow] 
                  [:##j :##down_arrow] 
                  [:##k :##up_arrow] 
                  [:##l :##right_arrow]
                  [:##n :tab]
                  [:##spacebar :##return_or_enter]
                 ;; App launching
                  [:e :!TSe]
                  [:a :!TSa]
                  [:s :!TSs]
                  [:d :!TSd]
                  [:f :!TSf]
                  [:t :!TSt]
                  [:##r :!TSr]
                  [:backslash :!TSbackslash]
                  ]
          }
         {:des "cmd + e to escape" :rules [[:!Ce :escape]]}
         {:des "shift" :rules [[:grave_accent_and_tilde :left_shift]]}
         {:des "symbols" :rules [:symbols_mode 
                                               ;; left hand
                                               ;; top row
                                               [:q :!S2] ;; ", quotations
                                               [:k :!Speriod] ;; :, kolon
                                               [:l :!Scomma] ;; next to the colon
                                               [:r :!S1] ;; !, rage
                                               ;; parentheses
                                               [:x :!SO8] ;; {
                                               [:c :!SO9] ;; }
                                               [:w :!O8] ;; [
                                               [:e :!O9] ;; ]
                                               [:s :!S8] ;; (
                                               [:d :!S9] ;; )
                                               [:f :!S7] ;; /, find in vim
                                               ;; bottom row
                                               [:x :!S6] ;; { 
                                               [:v :!S0] ;; =, validated equality
                                               [:b :!SO7] ;; \, backslash
                                               [:a :!S6] ;; &, and
                                               [:p :hyphen] ;; +, plus
                                               [:n :slash] ;; -, new bullet
                                               [:g :!Snon_us_pound] ;; *, galactic body
                                               [:open_bracket :!Shyphen] ;; 
                                               [:u :!Oclose_bracket] ;; _ 
                                               [:i [:!Sclose_bracket :spacebar]] ;; ^, forward/backwards in vim
                                               [:o :non_us_backslash] ;; $, forward/backward in vim
                                               [:j :!Sgrave_accent_and_tilde] ;; >, right relative to h
                                               [:h :grave_accent_and_tilde] ;; <, left relative to j
                                               [:t :!S3] ;; hashTag
                                               [:z :vk_none] ;; 
                                               [:u :vk_none] ;; 
                                               [:m :!S5] ;; %, matching bracket in vim
                                               ]}
         ]}